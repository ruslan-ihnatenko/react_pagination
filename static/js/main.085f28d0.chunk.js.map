{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","lastPage","Math","ceil","className","classNames","disabled","href","onClick","map","active","App","useState","setCurrentPage","itemPerPage","setItemPerPage","startItem","endItem","id","defaultValue","onChange","e","target","value","defaultChecked","htmlFor","page","m","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAoB,GAEjBC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YAEI,IADJC,oBACI,MADW,aACX,EACEC,EAAWC,KAAKC,KAAKN,EAAQC,GAcnC,OACE,mCACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBP,IAFd,SAKE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBR,EACfS,QAAS,WAxBG,IAAhBT,GACFC,EAAaD,EAAc,IAkBvB,oBAUDT,EAAW,EAAGW,GACZQ,KAAI,SAACf,GAAD,OACH,oBACEU,UAAWC,IACT,YACA,CAAEK,OAAQX,IAAgBL,IAH9B,SAOE,mBACE,UAAQ,WACRU,UAAU,YACVG,KAAI,WAAMb,GACVc,QAAS,kBAAMR,EAAaN,IAJ9B,SAMGA,KAREA,MAYX,oBAAIU,UAAWC,IACb,YACA,CAAEC,SAAUP,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeR,IAAgBE,EAC/BO,QAAS,WApDbT,IAAgBE,GAClBD,EAAaD,EAAc,IA8CvB,0BCpEGY,EAAgB,WAC3B,IACA,EAAsCC,mBAAS,GAA/C,mBAAOb,EAAP,KAAoBc,EAApB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KAOMC,EAAYjB,EAAce,GAAeA,EAAc,GACzDG,EAAUlB,EAAce,EAM5B,OAJIG,EAZU,KAaZA,EAbY,IAiBZ,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBAEYL,EAFZ,mBAEkCiB,EAFlC,cAEiDC,EAFjD,eApBU,GAoBV,OAMA,sBAAKb,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRc,GAAG,kBACHd,UAAU,eACVe,aAAa,IACbC,SAAU,SAACC,GAAD,OA5BlBN,GA4BwCM,EA5BlBC,OAAOC,YAC7BV,EAAe,IAsBT,UAOE,wBAAQU,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAIC,gBAAc,EAAhC,eACA,wBAAQD,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkBrB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,MAhDQ,GAiDRC,QAASgB,EACTf,YAAaA,EACbC,aAAc,SAAC0B,GACbb,EAAea,MAGnB,6BACGpC,EAAW0B,EAAWC,GACpBR,KAAI,SAACkB,GAAD,OACH,oBACE,UAAQ,OADV,wBAIWA,IAFJA,YC/DnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.085f28d0.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers: number[] = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange = () => {},\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n\n  const PrevPageSelector = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const NextPageSelector = () => {\n    if (currentPage !== lastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => PrevPageSelector()}\n          >\n            «\n          </a>\n        </li>\n        {getNumbers(1, lastPage)\n          .map((n:number) => (\n            <li\n              className={classNames(\n                'page-item',\n                { active: currentPage === n },\n              )}\n              key={n}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${n}`}\n                onClick={() => onPageChange(n)}\n              >\n                {n}\n              </a>\n            </li>\n          ))}\n        <li className={classNames(\n          'page-item',\n          { disabled: currentPage === lastPage },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === lastPage}\n            onClick={() => NextPageSelector()}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination/Pagination';\nimport { getNumbers } from './utils';\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemPerPage, setItemPerPage] = useState(5);\n\n  const ItemNumberCalc = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const startItem = currentPage * itemPerPage - (itemPerPage - 1);\n  let endItem = currentPage * itemPerPage;\n\n  if (endItem > total) {\n    endItem = total;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {\n          `Page ${currentPage} (items ${startItem} - ${endItem} of ${total})`\n        }\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue=\"5\"\n            onChange={(e) => ItemNumberCalc(e)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\" defaultChecked>5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={itemPerPage}\n        currentPage={currentPage}\n        onPageChange={(page) => {\n          setCurrentPage(page);\n        }}\n      />\n      <ul>\n        {getNumbers(startItem, endItem)\n          .map((m:number) => (\n            <li\n              data-cy=\"item\"\n              key={m}\n            >\n              {`Item ${m}`}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}