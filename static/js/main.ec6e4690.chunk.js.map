{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","startItem","endItem","lastPage","Math","ceil","className","classNames","disabled","href","onClick","map","active","m","App","useState","setCurrentPage","itemPerPage","setItemPerPage","id","defaultValue","onChange","e","target","value","defaultChecked","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAoB,GAEjBC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCMIG,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,QAKI,IAJJC,mBAII,MAJU,EAIV,MAHJC,oBAGI,MAHW,aAGX,EAFJC,EAEI,EAFJA,UACAC,EACI,EADJA,QAEMC,EAAWC,KAAKC,KAAKR,EAAQC,GAEnC,OACE,qCACE,qBAAIQ,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBT,IAFd,SAKE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBV,EACfW,QAAS,WACa,IAAhBX,GACFC,EAAaD,EAAc,IAPjC,oBAcDT,EAAW,EAAGa,GACZQ,KAAI,SAACjB,GAAD,OACH,oBACEY,UAAWC,IACT,YACA,CAAEK,OAAQb,IAAgBL,IAH9B,SAOE,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAI,WAAMf,GACVgB,QAAS,WACPV,EAAaN,IALjB,SAQGA,KAVEA,MAcX,oBAAIY,UAAWC,IACb,YACA,CAAEC,SAAUT,IAAgBI,IAF9B,SAKE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeV,IAAgBI,EAC/BO,QAAS,WACHX,IAAgBI,GAClBH,EAAaD,EAAc,IAPjC,uBAeJ,6BACGT,EAAWW,EAAWC,GACpBS,KAAI,SAACE,GAAD,OACH,oBACE,UAAQ,OADV,wBAIWA,IAFJA,YCvFNC,EAAgB,WAC3B,IACA,EAAsCC,mBAAS,GAA/C,mBAAOhB,EAAP,KAAoBiB,EAApB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KAEMjB,EAAYF,EAAckB,GAAeA,EAAc,GACzDf,EAAUH,EAAckB,EAM5B,OAJIf,EAPU,KAQZA,EARY,IAYZ,sBAAKI,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBAEYP,EAFZ,mBAEkCE,EAFlC,cAEiDC,EAFjD,eAfU,GAeV,OAMA,sBAAKI,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRa,GAAG,kBACHb,UAAU,eACVc,aAAa,IACbC,SAAU,SAAAC,GACRJ,GAAgBI,EAAEC,OAAOC,OACzBR,EAAe,IAPnB,UAUE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAIC,gBAAc,EAAhC,eACA,wBAAQD,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkBpB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MA9CQ,GA+CRC,QAASmB,EACTlB,YAAaA,EACbC,aAAc,SAAC2B,GACbX,EAAeW,IAEjBzB,QAASA,EACTD,UAAWA,QCvDnB2B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ec6e4690.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers: number[] = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange?: (page: number) => void;\n  startItem: number;\n  endItem: number;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange = () => {},\n  startItem,\n  endItem,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => {\n              if (currentPage !== 1) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n        {getNumbers(1, lastPage)\n          .map((n:number) => (\n            <li\n              className={classNames(\n                'page-item',\n                { active: currentPage === n },\n              )}\n              key={n}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${n}`}\n                onClick={() => {\n                  onPageChange(n);\n                }}\n              >\n                {n}\n              </a>\n            </li>\n          ))}\n        <li className={classNames(\n          'page-item',\n          { disabled: currentPage === lastPage },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === lastPage}\n            onClick={() => {\n              if (currentPage !== lastPage) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {getNumbers(startItem, endItem)\n          .map((m:number) => (\n            <li\n              data-cy=\"item\"\n              key={m}\n            >\n              {`Item ${m}`}\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination/Pagination';\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemPerPage, setItemPerPage] = useState(5);\n\n  const startItem = currentPage * itemPerPage - (itemPerPage - 1);\n  let endItem = currentPage * itemPerPage;\n\n  if (endItem > total) {\n    endItem = total;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {\n          `Page ${currentPage} (items ${startItem} - ${endItem} of ${total})`\n        }\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue=\"5\"\n            onChange={e => {\n              setItemPerPage(+e.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\" defaultChecked>5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={itemPerPage}\n        currentPage={currentPage}\n        onPageChange={(page) => {\n          setCurrentPage(page);\n        }}\n        endItem={endItem}\n        startItem={startItem}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}